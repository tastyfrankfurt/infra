global:
  enabled: true
  tlsDisable: true
  resources:
    requests:
      memory: 256Mi
      cpu: 250m
    limits:
      memory: 256Mi
      cpu: 250m
server:
  image:
    repository: "hashicorp/vault" # {"$imagepolicy": "flux-system:vaultdeploy:name"}
    tag: "1.17.6" # {"$imagepolicy": "flux-system:vaultdeploy:tag"}
  ingress:
    enabled: true
    annotations:
      cert-manager.io/issuer: "vault-issuer"
      cert-manager.io/common-name: "vault"
      cert-manager.io/private-key-algorithm: "ECDSA"
      cert-manager.io/private-key-size: "521"
      cert-manager.io/duration: "216h"
      cert-manager.io/inject-ca-from-secret: vault/vault-tls
    ingressClassName: nginx
    pathType: Prefix
    activeService: true
    hosts:
    - host: jupiter.hell.local
      paths:
      - /
    tls:
    - hosts:
      - jupiter.hell.local
      secretName: vault-tls
  updateStrategyType: RollingUpdate
  readinessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
  livenessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true"
    initialDelaySeconds: 60
  dataStorage:
    enabled: true
    size: 2Gi
    accessMode: ReadWriteMany
    storageClass: nfs-csi
  auditStorage:
    enabled: true
  standalone:
    enabled: false
  tolerations:
  - key: "node-role.kubernetes.io/control-plane"
    operator: "Exists"
    effect: "NoSchedule"
  ha:
    enabled: true
    replicas: 3
    apiAddr: "http://jupiter.hell.local"
    raft:
      enabled: true
      setNodeId: true
      config: |
        ui = true
        cluster_name = "jupiter.hell.local"
        listener "tcp" {
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          tls_disable = "true"
        }
        storage "raft" {
          path = "/vault/data"
          retry_join {
            leader_api_addr = "http://vault-0.vault-internal:8200"
          }
          retry_join {
            leader_api_addr = "http://vault-1.vault-internal:8200"
          }
          retry_join {
            leader_api_addr = "http://vault-2.vault-internal:8200"
          }
          autopilot {
            server_stabilization_time = "10s"
            last_contact_threshold = "10s"
            min_quorum = 3
            cleanup_dead_servers = false
            dead_server_last_contact_threshold = "10m"
            max_trailing_logs = 1000
            disable_upgrade_migration = false
          }
        }
        service_registration "kubernetes" {}
injector:
  enabled: "false"
ui:
  enabled: true
